---
- name: create ec2 instance
  ec2:
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    region: "{{ region }}"
    key_name: "{{ project_name }}-{{ env }}-key"
    groups:
      - "{{ project_name }}-{{ env }}-server-sg"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    wait: yes
    wait_timeout: 300
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: 30
        delete_on_termination: true
    instance_tags:
      Name: "{{ instance_name }}"
      project: "{{ project_name }}"
      env: "{{ env }}"
    count_tag: env
    exact_count: 1
  register: ec2

- name: wait for ssh
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
  with_items: "{{ ec2.instances }}"

- name: add host for initial setup
  add_host:
    name: ec2_host
    ansible_host: "{{ item.public_ip }}"
    ansible_user: ubuntu
    ansible_private_key_file: "roles/{{ role_name }}/files/{{ project_name}}-{{ env }}-private.pem"
  with_items: "{{ ec2.tagged_instances }}"

- name: install python
  raw: bash -c "test -e /usr/bin/python || (sudo apt -qqy update && sudo apt install -qqy python-minimal)"
  register: installation
  changed_when: installation.stdout != ""
  delegate_to: ec2_host

- name: generate locale for en_AU
  locale_gen:
    name: en_AU.UTF-8
    state: present
  delegate_to: ec2_host
  become: true

- name: perform distribution upgrade
  apt:
    upgrade: dist
    update_cache: true
  delegate_to: ec2_host
  become: true

- name: add ip to ec2_hosts group
  lineinfile:
    dest: hosts
    regexp: "{{ item.public_ip }}"
    insertafter: "[ec2_hosts]"
    line: "{{ item.public_ip }} ansible_ssh_user=ubuntu ansible_ssh_private_key=roles/{{ role_name }}/files/{{ project_name}}-{{ env }}-private.pem"
  with_items: "{{ ec2.tagged_instances }}"
